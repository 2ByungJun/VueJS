{"remainingRequest":"C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\src\\store\\index.js","mtime":1605231214801},{"path":"C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\insilicogen\\Desktop\\Vue_git\\1. todo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7ClZ1ZS51c2UoVnVleCk7IC8vIFZ1ZeyXkCBWdWV4IO2UjOufrOq3uOyduOydhCDsgqzsmqntlaAg6rKD7J206528IOuqheyLnAoKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIC8vIOuNsOydtO2EsOqwgCDrk6TslrTqsIDripQg6rOzCiAgc3RhdGU6IHsKICAgIHRvZG9zOiBbewogICAgICBpZDogMSwKICAgICAgdGV4dDogJ2J1eSBhIGNhcicsCiAgICAgIGNoZWNrZWQ6IGZhbHNlCiAgICB9LCB7CiAgICAgIGlkOiAyLAogICAgICB0ZXh0OiAncGxheSBnYW1lJywKICAgICAgY2hlY2tlZDogZmFsc2UKICAgIH1dLAogICAgdXNlcnM6IFtdCiAgfSwKICAvLyBjb21taXTsnYQg7ZWY7JesIOuNsOydtO2EsOulvCDsi6TsoJzroZwg67OA6rK965CY6rKMIO2VqCjqt5zslb0pCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfVVNFUlM6IGZ1bmN0aW9uIFNFVF9VU0VSUyhzdGF0ZSwgdXNlcnMpIHsKICAgICAgc3RhdGUudXNlcnMgPSB1c2VyczsKICAgIH0sCiAgICBBRERfVE9ETzogZnVuY3Rpb24gQUREX1RPRE8oc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLnRvZG9zLnB1c2goewogICAgICAgIGlkOiBNYXRoLnJhbmRvbSgpLAogICAgICAgIHRleHQ6IHZhbHVlLAogICAgICAgIGNoZWNrZWQ6IGZhbHNlCiAgICAgIH0pOwogICAgfSwKICAgIFRPR0dMRV9UT0RPOiBmdW5jdGlvbiBUT0dHTEVfVE9ETyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgaW5kZXggPSBzdGF0ZS50b2Rvcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRvZG8pIHsKICAgICAgICByZXR1cm4gdG9kby5pZCA9PT0gcGF5bG9hZC5pZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLnRvZG9zW2luZGV4XS5jaGVja2VkID0gcGF5bG9hZC5jaGVja2VkOwogICAgfSwKICAgIERFTEVURV9UT0RPOiBmdW5jdGlvbiBERUxFVEVfVE9ETyhzdGF0ZSwgdG9kb0lkKSB7CiAgICAgIHZhciBpbmRleCA9IHN0YXRlLnRvZG9zLmZpbmRJbmRleChmdW5jdGlvbiAodG9kbykgewogICAgICAgIHJldHVybiB0b2RvLmlkID09PSB0b2RvSWQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS50b2Rvcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogIH0sCiAgLy8g7ZWo7IiY6rCAIOuTpOyWtOqwgOuKlCDqs7Mo67mE64+Z6riw7KCBKQogIGFjdGlvbnM6IHsKICAgIGdldFVzZXJzOiBmdW5jdGlvbiBnZXRVc2VycyhfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgYXhpb3MuZ2V0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb21taXQoJ1NFVF9VU0VSUycsIHJlcy5kYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gY29udGV4dOqwgCDrk6TslrTqsJAKICAgIC8vIOuCtOu2gOydmCBjb21taXTrp4wg7IKs7Jqp7ZaI7J2MCiAgICBhZGRUb2RvOiBmdW5jdGlvbiBhZGRUb2RvKF9yZWYyLCB2YWx1ZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAvLyBheGlvcy5wb3N0KCkKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgY29tbWl0KCdBRERfVE9ETycsIHZhbHVlKTsKICAgICAgfSwgNTAwKTsKICAgIH0sCiAgICB0b2dnbGVUb2RvOiBmdW5jdGlvbiB0b2dnbGVUb2RvKF9yZWYzLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGNvbW1pdCgnVE9HR0xFX1RPRE8nLCBwYXlsb2FkKTsKICAgICAgfSwgNTAwKTsKICAgIH0sCiAgICBkZWxldGVUb2RvOiBmdW5jdGlvbiBkZWxldGVUb2RvKF9yZWY0LCB0b2RvSWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgY29tbWl0KCdERUxFVEVfVE9ETycsIHRvZG9JZCk7CiAgICAgIH0sIDUwMCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBudW1iZXJPZkNvbXBsZXRlZFRvZG86IGZ1bmN0aW9uIG51bWJlck9mQ29tcGxldGVkVG9kbyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudG9kb3MuZmlsdGVyKGZ1bmN0aW9uICh0b2RvKSB7CiAgICAgICAgcmV0dXJuIHRvZG8uY2hlY2tlZDsKICAgICAgfSkubGVuZ3RoOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["C:/Users/insilicogen/Desktop/Vue_git/1. todo/src/store/index.js"],"names":["Vue","Vuex","axios","use","Store","state","todos","id","text","checked","users","mutations","SET_USERS","ADD_TODO","value","push","Math","random","TOGGLE_TODO","payload","index","findIndex","todo","DELETE_TODO","todoId","splice","actions","getUsers","commit","get","then","res","data","addTodo","setTimeout","toggleTodo","deleteTodo","getters","numberOfCompletedTodo","filter","length"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport axios from 'axios';\r\n\r\nVue.use(Vuex); // Vue에 Vuex 플러그인을 사용할 것이라 명시\r\n\r\nexport default new Vuex.Store({\r\n    // 데이터가 들어가는 곳\r\n    state: {\r\n        todos: [\r\n            {id: 1, text: 'buy a car', checked:false},\r\n            {id: 2, text: 'play game', checked:false},        \r\n          ],\r\n        users: []\r\n    },\r\n    // commit을 하여 데이터를 실제로 변경되게 함(규약)\r\n    mutations: {\r\n        SET_USERS(state, users){\r\n            state.users = users;\r\n        },\r\n        ADD_TODO(state, value){\r\n            state.todos.push({\r\n                id: Math.random(),\r\n                text: value,\r\n                checked: false\r\n            });\r\n        },\r\n        TOGGLE_TODO(state, payload){\r\n            const index = state.todos.findIndex(todo => {\r\n                return todo.id === payload.id;\r\n              });\r\n              state.todos[index].checked = payload.checked;\r\n        },\r\n        DELETE_TODO(state, todoId){\r\n            const index = state.todos.findIndex(todo => {\r\n                return todo.id === todoId;\r\n            });\r\n            state.todos.splice(index, 1);\r\n        }   \r\n    },\r\n    // 함수가 들어가는 곳(비동기적)\r\n    actions: {\r\n        getUsers({commit}){\r\n            axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\r\n                commit('SET_USERS', res.data);\r\n            });\r\n        },\r\n        // context가 들어감\r\n        // 내부의 commit만 사용했음\r\n        addTodo({commit}, value){\r\n            // axios.post()\r\n            setTimeout(function (){\r\n                commit('ADD_TODO', value);\r\n            }, 500);\r\n        },\r\n        toggleTodo({commit}, payload){\r\n            setTimeout(function (){\r\n                commit('TOGGLE_TODO', payload);\r\n            }, 500);\r\n        },\r\n        deleteTodo({commit}, todoId){\r\n            setTimeout(function (){\r\n                commit('DELETE_TODO', todoId);\r\n            }, 500);\r\n        }\r\n    },\r\n    getters: {\r\n        numberOfCompletedTodo: state => {\r\n            return state.todos.filter(todo => todo.checked).length;\r\n        }\r\n    }\r\n})\r\n"]}]}